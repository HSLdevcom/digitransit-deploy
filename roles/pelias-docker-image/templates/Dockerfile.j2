FROM java:8-jre
MAINTAINER Reittiopas version: 0.1

ENV HOME /root
ENV DEBIAN_FRONTEND noninteractive

# verify gpg and sha256: http://nodejs.org/dist/v0.10.30/SHASUMS256.txt.asc
# gpg: aka "Timothy J Fontaine (Work) <tj.fontaine@joyent.com>"
# gpg: aka "Julien Gilli <jgilli@fastmail.fm>"
# gpg: aka "Tianon Gravi <tianon@tianon.xyz>"
# gpg: aka "Elasticsearch (Elasticsearch Signing Key) <dev_ops@elasticsearch.org>"
RUN set -ex \
	&& for key in \
		7937DFD2AB06298B2293C3187D33FF9D0246406D \
		114F43EE0176B71C7BC219DD50A3051F888C628D \
    B42F6819007F00F88E364FD4036A9C25BF357DD4 \
    46095ACC8548582C1A2699A9D27D666CD88E42B4 \
	; do \
		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
	done

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D27D666CD88E42B4

# grab gosu for easy step-down from root
RUN arch="$(dpkg --print-architecture)" \
	&& set -x \
	&& curl -o /usr/local/bin/gosu -fsSL "https://github.com/tianon/gosu/releases/download/1.3/gosu-$arch" \
	&& curl -o /usr/local/bin/gosu.asc -fsSL "https://github.com/tianon/gosu/releases/download/1.3/gosu-$arch.asc" \
	&& gpg --verify /usr/local/bin/gosu.asc \
	&& rm /usr/local/bin/gosu.asc \
	&& chmod +x /usr/local/bin/gosu

# set elasticsearch version and download it
ENV ELASTICSEARCH_MAJOR 1.7
ENV ELASTICSEARCH_VERSION 1.7.2

RUN echo "deb http://packages.elasticsearch.org/elasticsearch/$ELASTICSEARCH_MAJOR/debian stable main" > /etc/apt/sources.list.d/elasticsearch.list

RUN set -x \
	&& apt-get update \
	&& apt-get install -y --no-install-recommends elasticsearch=$ELASTICSEARCH_VERSION

ENV PATH /usr/share/elasticsearch/bin:$PATH

RUN set -ex \
	&& for path in \
		/usr/share/elasticsearch/data \
		/usr/share/elasticsearch/logs \
		/usr/share/elasticsearch/config \
	; do \
		mkdir -p "$path"; \
		chown -R elasticsearch:elasticsearch "$path"; \
	done

ADD config/logging.yml /usr/share/elasticsearch/config/
ADD config/elasticsearch.yml /usr/share/elasticsearch/config/


# set node and npv version
ENV NODE_VERSION 0.12.7
ENV NPM_VERSION 3

# install Node
RUN curl -sS -LO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz" \
	&& curl -sS -LO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
	&& gpg --verify SHASUMS256.txt.asc \
	&& grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc | sha256sum -c - \
	&& tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1 \
	&& rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc \
	&& npm install -g npm@"$NPM_VERSION" \
	&& npm cache clear


# Install other dependencise
RUN apt-get install -y --no-install-recommends git unzip python python-dev python-pip python-virtualenv \
  build-essential software-properties-common curl wget apt-utils gdal-bin


# Install address deduper
RUN git clone https://github.com/openvenues/address_deduper.git \
  && cd address_deduper \
	&& pip install -r requirements.txt

# Auxiliary folders
RUN rm -rf /mnt
RUN mkdir -p /mnt/data/openstreetmap
RUN mkdir -p /tmp/openstreetmap/
RUN mkdir -p /mnt/data/openaddresses
RUN mkdir -p /mnt/data/quattroshapes
RUN mkdir -p /mnt/data/geonames
RUN mkdir -p /var/log/esclient/

# Download data
WORKDIR /mnt/data/quattroshapes
RUN curl -sS -O http://quattroshapes.mapzen.com/quattroshapes/alpha3/FIN.tgz
RUN tar zxvf FIN.tgz && rm -f FIN.tgz

RUN SHAPE_ENCODING="ISO-8859-1" ogr2ogr qs_adm0.shp FIN/FIN_admin0.shp -lco ENCODING=UTF-8
RUN SHAPE_ENCODING="ISO-8859-1" ogr2ogr qs_adm1.shp FIN/FIN_admin1.shp -lco ENCODING=UTF-8
RUN SHAPE_ENCODING="ISO-8859-1" ogr2ogr qs_adm2.shp FIN/FIN_admin2.shp -lco ENCODING=UTF-8
RUN SHAPE_ENCODING="ISO-8859-1" ogr2ogr qs_localadmin.shp FIN/FIN_localadmin.shp -lco ENCODING=UTF-8
# RUN SHAPE_ENCODING="ISO-8859-1" ogr2ogr qs_localities.shp FIN/FIN_localities.shp -lco ENCODING=UTF-8
# RUN SHAPE_ENCODING="ISO-8859-1" ogr2ogr qs_neighborhoods.shp FIN/FIN_neighborhoods.shp -lco ENCODING=UTF-8

RUN rm -rf FIN/

# Download Finnish municipalities and convert these to quattroshapes format
RUN curl -sS -O http://kartat.kapsi.fi/files/kuntajako/kuntajako_10k/etrs89/gml/TietoaKuntajaosta_2015_10k.zip \
  && unzip TietoaKuntajaosta_2015_10k.zip \
	&& ogr2ogr -t_srs EPSG:4326 -nlt POLYGON -splitlistfields -where "nationalLevel='4thOrder'" -f "ESRI Shapefile" kunnat.shp TietoaKuntajaosta_2015_10k/SuomenKuntajako_2015_10k.xml AdministrativeUnit -lco ENCODING=UTF-8 \
	&& ogr2ogr -sql "SELECT text1 AS qs_loc FROM kunnat" -f "ESRI Shapefile" qs_localities.shp kunnat.shp -lco ENCODING=UTF-8

# Download zip codes and convert these to quattroshapes format
RUN ogr2ogr -t_srs EPSG:4326 -nlt POLYGON -sql "SELECT CONCAT( posti_alue, ' ', nimi ) AS name from 'postialue:pno_meri_2015'" -f "ESRI Shapefile" qs_neighborhoods.shp WFS:http://geo.stat.fi/geoserver/postialue/postialue%3Apno_meri_2015/wfs -lco ENCODING=UTF-8

WORKDIR /mnt/data/openstreetmap
RUN curl -sS -O http://download.geofabrik.de/europe/finland-latest.osm.pbf

#TODO: find out run number from http://results.openaddresses.io/state.txt
WORKDIR /mnt/data/openaddresses
RUN curl -sS -O http://data.openaddresses.io.s3.amazonaws.com/runs/37881/fi/18/helsinki.zip \
  && unzip -o helsinki.zip \
  && curl -sS -O http://data.openaddresses.io.s3.amazonaws.com/runs/37878/fi/14/oulu.zip \
  && unzip -o oulu.zip \
  && curl -sS -O http://data.openaddresses.io.s3.amazonaws.com/runs/37883/fi/11/tampere.zip \
  && unzip -o tampere.zip \
  && curl -sS -O http://data.openaddresses.io.s3.amazonaws.com/runs/32517/fi/19/turku.zip \
  && unzip -o turku.zip \


# Install openstreetmap pelias importer
# Todo, move back to pelias repo after PR is merged
RUN mkdir $HOME/.pelias \
  && git clone https://github.com/hannesj/openstreetmap.git $HOME/.pelias/openstreetmap \
	&& cd $HOME/.pelias/openstreetmap \
	&& npm install

# setting workdir
WORKDIR /root

#
# Pelias
#

#  Copying pelias config file
ADD pelias.json pelias.json

#  Install Pelias CLI
RUN npm install -g pelias-cli

ENV ES_HEAP_SIZE 4g

RUN elasticsearch -d \
  && python /address_deduper/app.py serve \
  & pelias schema create_index \
  && pelias geonames import -i FI \
  && pelias openaddresses import --admin-values --deduplicate \
  && pelias openstreetmap import

#RUN pelias api test

ENV PORT 3000

EXPOSE 3000

#CMD bash
CMD elasticsearch -d && pelias api start
